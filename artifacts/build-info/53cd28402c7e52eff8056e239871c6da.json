{
	"id": "53cd28402c7e52eff8056e239871c6da",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"function.sol": {
				"content": "// SPDX-License-Identifier: MIT;\r\npragma solidity ^0.8.7;\r\n\r\n/* function f2() pure returns(uint) {\r\n    uint u = 120;\r\n    return u;\r\n}\r\n\r\ncontract A {\r\n    function f3() external pure returns (string memory) {\r\n        string  memory str = 'haha';\r\n        return str;\r\n    }\r\n\r\n    function f4() public pure {\r\n        f3();\r\n    }\r\n}\r\n\r\ncontract B {\r\n\r\n    function f1() internal pure returns(bool) {\r\n        bool b = true;\r\n        return b;\r\n    }\r\n\r\n\r\n    function callInternal() public pure returns (bool) {\r\n        return f1();\r\n    }\r\n\r\n\r\n    function callExternal() public pure returns (uint) {\r\n        return f2();\r\n    }\r\n\r\n    function callContractFn(A a) public pure {\r\n        a.f3();\r\n    }\r\n} */"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"function.sol": {
				"ast": {
					"absolutePath": "function.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						}
					],
					"src": "34:681:0"
				},
				"id": 0
			}
		}
	}
}