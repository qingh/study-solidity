{
	"id": "a395afe20b1a3fb86ec0c47aad36dcc7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"login.sol": {
				"content": "// SPDX-License-Identifier: MIT;\r\npragma solidity ^0.8.7;\r\n\r\n/* contract UserReg {\r\n    struct User {\r\n        uint id;\r\n        string name;\r\n        string password;\r\n    }\r\n\r\n    User[] userList;\r\n    uint count = 0;\r\n\r\n    function reg (string memory _name,string memory _password) public payable {\r\n        count++;\r\n        userList.push(User({id:count,name:_name,password:_password}));\r\n    }\r\n\r\n    function getUserList() public view returns (User[] memory){\r\n        return userList;\r\n    }\r\n}\r\n\r\ncontract Login {\r\n    function reg(UserReg u,string memory _name,string memory _password) public payable {\r\n        u.reg(_name,_password);\r\n    }\r\n\r\n    function getUserList(UserReg u) public view {\r\n        u.getUserList();\r\n    }\r\n} */"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"login.sol": {
				"ast": {
					"absolutePath": "login.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						}
					],
					"src": "34:710:0"
				},
				"id": 0
			}
		}
	}
}