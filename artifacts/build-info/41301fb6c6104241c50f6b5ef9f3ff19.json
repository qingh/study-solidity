{
	"id": "41301fb6c6104241c50f6b5ef9f3ff19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"error.sol": {
				"content": "// SPDX-License-Identifier: MIT;\r\npragma solidity ^0.8.7;\r\n\r\n/* \r\n    require\r\n    revert \r\n    assert\r\n    自定义错误\r\n */\r\n\r\ncontract ErrorTest {\r\n    /* string sex; \r\n    function f1(uint n) public {\r\n        if(n > 20){\r\n            sex = 'man';\r\n            revert(\"age cant't rather than 20\");\r\n        }else {\r\n            sex = 'woman';\r\n        }\r\n    } */\r\n\r\n    uint num = 0;\r\n    function addNum(uint n) public {\r\n        num +=1;\r\n        require(n<10);\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"error.sol": {
				"ErrorTest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								}
							],
							"name": "addNum",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"error.sol\":132:483  contract ErrorTest {\r... */\n  mstore(0x40, 0x80)\n    /* \"error.sol\":389:390  0 */\n  0x00\n    /* \"error.sol\":378:390  uint num = 0 */\n  dup1\n  sstore\n    /* \"error.sol\":132:483  contract ErrorTest {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"error.sol\":132:483  contract ErrorTest {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75278362\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"error.sol\":397:478  function addNum(uint n) public {\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"error.sol\":445:446  1 */\n      0x01\n        /* \"error.sol\":439:442  num */\n      0x00\n      dup1\n        /* \"error.sol\":439:446  num +=1 */\n      dup3\n      dup3\n      sload\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"error.sol\":467:469  10 */\n      0x0a\n        /* \"error.sol\":465:466  n */\n      dup2\n        /* \"error.sol\":465:469  n<10 */\n      lt\n        /* \"error.sol\":457:470  require(n<10) */\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n        /* \"error.sol\":397:478  function addNum(uint n) public {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_13:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_15\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":228:347   */\n    tag_18:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_21\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_13\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:873   */\n    tag_10:\n        /* \"#utility.yul\":608:611   */\n      0x00\n        /* \"#utility.yul\":627:647   */\n      tag_25\n        /* \"#utility.yul\":645:646   */\n      dup3\n        /* \"#utility.yul\":627:647   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":622:647   */\n      swap2\n      pop\n        /* \"#utility.yul\":661:681   */\n      tag_27\n        /* \"#utility.yul\":679:680   */\n      dup4\n        /* \"#utility.yul\":661:681   */\n      tag_26\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":656:681   */\n      swap3\n      pop\n        /* \"#utility.yul\":815:816   */\n      dup3\n        /* \"#utility.yul\":747:813   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":743:817   */\n      sub\n        /* \"#utility.yul\":740:741   */\n      dup3\n        /* \"#utility.yul\":737:818   */\n      gt\n        /* \"#utility.yul\":734:841   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":821:839   */\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":734:841   */\n    tag_28:\n        /* \"#utility.yul\":865:866   */\n      dup3\n        /* \"#utility.yul\":862:863   */\n      dup3\n        /* \"#utility.yul\":858:867   */\n      add\n        /* \"#utility.yul\":851:867   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":879:956   */\n    tag_26:\n        /* \"#utility.yul\":916:923   */\n      0x00\n        /* \"#utility.yul\":945:950   */\n      dup2\n        /* \"#utility.yul\":934:950   */\n      swap1\n      pop\n        /* \"#utility.yul\":879:956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":962:1142   */\n    tag_30:\n        /* \"#utility.yul\":1010:1087   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1007:1008   */\n      0x00\n        /* \"#utility.yul\":1000:1088   */\n      mstore\n        /* \"#utility.yul\":1107:1111   */\n      0x11\n        /* \"#utility.yul\":1104:1105   */\n      0x04\n        /* \"#utility.yul\":1097:1112   */\n      mstore\n        /* \"#utility.yul\":1131:1135   */\n      0x24\n        /* \"#utility.yul\":1128:1129   */\n      0x00\n        /* \"#utility.yul\":1121:1136   */\n      revert\n        /* \"#utility.yul\":1271:1388   */\n    tag_20:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1377:1378   */\n      dup1\n        /* \"#utility.yul\":1370:1382   */\n      revert\n        /* \"#utility.yul\":1394:1516   */\n    tag_16:\n        /* \"#utility.yul\":1467:1491   */\n      tag_37\n        /* \"#utility.yul\":1485:1490   */\n      dup2\n        /* \"#utility.yul\":1467:1491   */\n      tag_26\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1460:1465   */\n      dup2\n        /* \"#utility.yul\":1457:1492   */\n      eq\n        /* \"#utility.yul\":1447:1510   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1503:1504   */\n      dup1\n        /* \"#utility.yul\":1496:1508   */\n      revert\n        /* \"#utility.yul\":1447:1510   */\n    tag_38:\n        /* \"#utility.yul\":1394:1516   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220200c4054aff101336935860b2669019a6c15f06700175a3d681eb0630dfd365364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000805534801561001457600080fd5b50610198806100246000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80637527836214610030575b600080fd5b61004a6004803603810190610045919061008a565b61004c565b005b600160008082825461005e91906100b7565b92505081905550600a811061007257600080fd5b50565b6000813590506100848161014b565b92915050565b6000602082840312156100a05761009f610146565b5b60006100ae84828501610075565b91505092915050565b60006100c28261010d565b91506100cd8361010d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561010257610101610117565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6101548161010d565b811461015f57600080fd5b5056fea2646970667358221220200c4054aff101336935860b2669019a6c15f06700175a3d681eb0630dfd365364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75278362 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x8A JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x5E SWAP2 SWAP1 PUSH2 0xB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP2 LT PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84 DUP2 PUSH2 0x14B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA0 JUMPI PUSH2 0x9F PUSH2 0x146 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAE DUP5 DUP3 DUP6 ADD PUSH2 0x75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2 DUP3 PUSH2 0x10D JUMP JUMPDEST SWAP2 POP PUSH2 0xCD DUP4 PUSH2 0x10D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x102 JUMPI PUSH2 0x101 PUSH2 0x117 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x154 DUP2 PUSH2 0x10D JUMP JUMPDEST DUP2 EQ PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xC BLOCKHASH SLOAD 0xAF CALL ADD CALLER PUSH10 0x35860B2669019A6C15F0 PUSH8 0x175A3D681EB063 0xD REVERT CALLDATASIZE MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "132:351:0:-:0;;;389:1;378:12;;132:351;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addNum_20": {
									"entryPoint": 76,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1519:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "537:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "547:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "547:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "520:6:1",
														"type": ""
													}
												],
												"src": "487:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "622:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "645:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "627:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "622:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "656:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "679:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "661:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "656:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "821:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "740:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "747:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "815:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "737:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "737:81:1"
															},
															"nodeType": "YulIf",
															"src": "734:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "851:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "862:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "865:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "599:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "602:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "608:3:1",
														"type": ""
													}
												],
												"src": "568:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "934:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "945:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "934:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "916:7:1",
														"type": ""
													}
												],
												"src": "879:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "990:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1007:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1000:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1104:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1097:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1097:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1128:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1131:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1121:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "962:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1237:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1257:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1247:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1148:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1360:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1370:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1271:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1460:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1485:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1467:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1467:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1457:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1457:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:43:1"
															},
															"nodeType": "YulIf",
															"src": "1447:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1430:5:1",
														"type": ""
													}
												],
												"src": "1394:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80637527836214610030575b600080fd5b61004a6004803603810190610045919061008a565b61004c565b005b600160008082825461005e91906100b7565b92505081905550600a811061007257600080fd5b50565b6000813590506100848161014b565b92915050565b6000602082840312156100a05761009f610146565b5b60006100ae84828501610075565b91505092915050565b60006100c28261010d565b91506100cd8361010d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561010257610101610117565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6101548161010d565b811461015f57600080fd5b5056fea2646970667358221220200c4054aff101336935860b2669019a6c15f06700175a3d681eb0630dfd365364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75278362 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x8A JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x5E SWAP2 SWAP1 PUSH2 0xB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP2 LT PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84 DUP2 PUSH2 0x14B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA0 JUMPI PUSH2 0x9F PUSH2 0x146 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAE DUP5 DUP3 DUP6 ADD PUSH2 0x75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2 DUP3 PUSH2 0x10D JUMP JUMPDEST SWAP2 POP PUSH2 0xCD DUP4 PUSH2 0x10D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x102 JUMPI PUSH2 0x101 PUSH2 0x117 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x154 DUP2 PUSH2 0x10D JUMP JUMPDEST DUP2 EQ PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xC BLOCKHASH SLOAD 0xAF CALL ADD CALLER PUSH10 0x35860B2669019A6C15F0 PUSH8 0x175A3D681EB063 0xD REVERT CALLDATASIZE MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "132:351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;397:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;445:1;439:3;;:7;;;;;;;:::i;:::-;;;;;;;;467:2;465:1;:4;457:13;;;;;;397:81;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;568:305::-;608:3;627:20;645:1;627:20;:::i;:::-;622:25;;661:20;679:1;661:20;:::i;:::-;656:25;;815:1;747:66;743:74;740:1;737:81;734:107;;;821:18;;:::i;:::-;734:107;865:1;862;858:9;851:16;;568:305;;;;:::o;879:77::-;916:7;945:5;934:16;;879:77;;;:::o;962:180::-;1010:77;1007:1;1000:88;1107:4;1104:1;1097:15;1131:4;1128:1;1121:15;1271:117;1380:1;1377;1370:12;1394:122;1467:24;1485:5;1467:24;:::i;:::-;1460:5;1457:35;1447:63;;1506:1;1503;1496:12;1447:63;1394:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "81600",
								"executionCost": "5135",
								"totalCost": "86735"
							},
							"external": {
								"addNum(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 389,
									"end": 390,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 390,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 378,
									"end": 390,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 132,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 483,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220200c4054aff101336935860b2669019a6c15f06700175a3d681eb0630dfd365364736f6c63430008070033",
									".code": [
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "75278362"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 397,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 465,
											"end": 466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 469,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 873,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 568,
											"end": 873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 608,
											"end": 611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 645,
											"end": 646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 627,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 627,
											"end": 647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 627,
											"end": 647,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 627,
											"end": 647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 622,
											"end": 647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 622,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 679,
											"end": 680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 656,
											"end": 681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 747,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 743,
											"end": 817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 740,
											"end": 741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 737,
											"end": 818,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 734,
											"end": 841,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 734,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 734,
											"end": 841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 841,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 734,
											"end": 841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 865,
											"end": 866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 858,
											"end": 867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 851,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 851,
											"end": 867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 873,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 568,
											"end": 873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 873,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 879,
											"end": 956,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 879,
											"end": 956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 916,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 934,
											"end": 950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 879,
											"end": 956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 879,
											"end": 956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 879,
											"end": 956,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 1142,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 962,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1007,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1104,
											"end": 1105,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1394,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1467,
											"end": 1491,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1467,
											"end": 1491,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1467,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1492,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1447,
											"end": 1510,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1447,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1394,
											"end": 1516,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addNum(uint256)": "75278362"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"addNum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"error.sol\":\"ErrorTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"error.sol\":{\"keccak256\":\"0x42e1b19f8e239ad7e887422fbc938ab509c944b0fef1dd36f0891da0403df6db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75d29af6c168696300e4e128f5587e6357d6c4fab01e327894808aeedcd8026a\",\"dweb:/ipfs/QmW3Shgbv6a2Mu6p5XYwjn46ZCF8q9isCTvitCQsjwYKtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "error.sol:ErrorTest",
								"label": "num",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"error.sol": {
				"ast": {
					"absolutePath": "error.sol",
					"exportedSymbols": {
						"ErrorTest": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "ErrorTest",
							"nameLocation": "141:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "num",
									"nameLocation": "383:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 21,
									"src": "378:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "378:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "389:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "428:50:0",
										"statements": [
											{
												"expression": {
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 9,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "439:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "445:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "439:7:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 14,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "465:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "467:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "465:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 13,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "457:13:0"
											}
										]
									},
									"functionSelector": "75278362",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addNum",
									"nameLocation": "406:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "418:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "413:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:8:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "428:0:0"
									},
									"scope": 21,
									"src": "397:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 22,
							"src": "132:351:0",
							"usedErrors": []
						}
					],
					"src": "34:449:0"
				},
				"id": 0
			}
		}
	}
}